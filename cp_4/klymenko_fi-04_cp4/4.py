N1 = 222
C1 = 71
N2 = 229
C2 = 73
size = 2048

L1 = []
L2 = []
L3 = []

array = list

def Geffe(l1, l2, l3):
    sequence = [0] * 28
    for i in range(27):
        sequence[i] = (l3[i] & l1[i]) ^ ((1 ^ l3[i]) & l2[i])
    return sequence

def isSim(first, second):
    return all(first[i] == second[i] for i in range(len(first)))

def plus1(array):
    carry = 1
    for i in range(len(array) - 1, -1, -1):
        array[i] += carry

        if array[i] == 2:
            array[i] = 0
            carry = 1
        else:
            carry = 0
            break
    if carry == 1:
        array.insert(0, carry)

    return array

def L1Calc(n, L1):
    a = n.copy()
    n1 = n.copy()
    for i in range(26, N1):
        a[i] = a[i - 22] ^ a[i - 25]
    r = sum(a[i] ^ array[i] for i in range(N1))
    if r < C1:
        for i in range(25, 28):
            n1[i] = a[i]
        L1.append([n1, r])

def L2Calc(n, L2):
    a = n.copy()
    n2 = n.copy()
    for i in range(26, N2):
        a[i] = a[i - 20] ^ a[i - 24] ^ a[i - 25] ^ a[i]
    r = sum(a[i] ^ array[i] for i in range(N2))
    if r < C2:
        for i in range(26, 28):
            n2[i] = a[i]
        L2.append([n2, r])

a = [0] * 28
for i in range(2 ** 26):
    L2Calc(a, L2)
    if i < 2 ** 25:
        L1Calc(a, L1)
    a = plus1(a)


def L3Calc(n):
    n1 = n.copy()
    for l1_item in L1:
        for l2_item in L2:
            gen = Geffe(l1_item[0], l2_item[0], n)
            if isSim(array, gen):
                L3.append(n1)

a = [0] * 28
for i in range(2 ** 27):
    L3Calc(a)
    a = plus1(a)
